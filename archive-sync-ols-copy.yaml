plugins:
  packages:
    - ccx_messaging
service:
  extract_timeout: 300
  extract_tmp_dir: /tmp/archives
  format: insights.formats._json.JsonFormat
  target_components: []

  consumer:
    name: ccx_messaging.consumers.kafka_consumer.KafkaConsumer
    kwargs:
      incoming_topic: ${KAFKA_INCOMING_TOPIC}
      platform_service: ${KAFKA_PLATFORM_SERVICE}
      group.id: ${KAFKA_GROUP_ID}
      bootstrap.servers: ${KAFKA_SERVER}
      processing_timeout_s: 0
      max.poll.interval.ms: 600000
      heartbeat.interval.ms: 10000
      session.timeout.ms: 20000

  downloader:
    name: ccx_messaging.downloaders.http_downloader.HTTPDownloader
    kwargs:
      allow_unsafe_links: true
      
  engine:
    name: ccx_messaging.engines.s3_upload_engine.S3UploadEngine
    kwargs:
      dest_bucket: ${TARGET_S3_BUCKET}
      access_key: ${EXTERNAL_S3_ACCESS_KEY}
      secret_key: ${EXTERNAL_S3_SECRET_KEY}
      endpoint: ${EXTERNAL_S3_URL}
      archives_path_prefix: archives/compressed

  publisher:
    name: insights_messaging.publishers.Publisher

  watchers:
    - name: ccx_messaging.watchers.stats_watcher.StatsWatcher
      kwargs:
        prometheus_port: 8000
    - name: ccx_messaging.watchers.payload_tracker_watcher.PayloadTrackerWatcher
      kwargs:
        bootstrap.servers: ${KAFKA_SERVER}
        topic: ${PAYLOAD_TRACKER_TOPIC}
        service_name: archive-sync-ols-copy
        
  logging:
    version: 1
    disable_existing_loggers: false
    handlers:
      default:
        level: ${LOGLEVEL_STDOUT}
        class: logging.StreamHandler
        stream: ext://sys.stdout
        formatter: default
    formatters:
      default:
        format: '%(asctime)s %(name)s %(levelname)-8s %(message)s'
        datefmt: '%Y-%m-%d %H:%M:%S'
    root:
      level: ${LOGLEVEL_ROOT}
      handlers:
        - default
    loggers:
      ccx_messaging:
        level: ${LOGLEVEL_CCX_MESSAGING}
      insights_messaging:
        level: ${LOGLEVEL_INSIGHTS_MESSAGING}
      insights:
        level: ${LOGLEVEL_INSIGHTS}
      kafka:
        level: ${LOGLEVEL_KAFKA}

